Lots of refactoring needed as this grew a bit organically

Touchscreen support

Thinking around some form of automation - how to define, for example,
a cut, retract, return, nudge in, and repeat? Making this flexible
would assist in thread cutting and keyway cutting (mentioned below)
  - Maybe in config, could define actions, like:

    repeat 5
    zspeed 100
    zgoto m1 (memory zero)
    xgoto +0.1 (relative move)
    zspeed 10
    zgoto m0

    (We're getting dangerously close to just using gcode here - maybe a
    limited gcode interpreter rather than reinventing wheels?)

Display chuck angle? Maybe useful for cuts where chuck is locked out,
then can be manually rotated (using the angle display)

Now that we have support for reading a linear scale on the Z-axis
we need to consider how best to use it. Should position come solely
from that, rather than continuing to rely on "dead reckoning"?
Or should it be used just to make corrections to the expected position?

Support limit switches? Could have multiple switches all on one pin and
when triggered it simply issues a 'stop all'

Address the "Mode" concept which currently provides pseudo-modal
"dialogs" interleaved into program flow, and is proving difficult
to maintain. If all motors are stopped during a "dialog" then we
can put them all on a separate flow.

Automate thread-cutting operations (or all?) to automatically return after the
target step has been reached and a key is pressed (or even fully automate)
-- AND (these are related) --
Automatic keyway "shaping" by simply moving Z in on the lathe repeatedly
with a tiny increment to X each time (obviously with the chuck locked
out and stationary). This would also give the ability to cut internal
squares / hexes etc.

Support enable pin for each motor

Set initial x-axis retraction direction from config file

Desperately need a "scratch memory" (or collection of them) to allow
a return to the previous stopped location. This is because I'll line
things up, then forget to store the memory location before moving.
(WIP) - currently key L works for axis 1 (Z) for this.
    - scratch memories should be cleared if the axis value is changed
      (i.e. with zero or manually setting a position)

Start thinking around a setting for adding a tiny amount of x motion
to counteract a lathe that cuts a bit of a taper (which works brilliantly,
but needs to be a config item that is applied automatically, rather
than having to use taper mode)
    Idea: for determining the angle required for correcting a lathe
    cutting a taper: allow the program to calculate the angle required
    by entering two measurements and a distance

All "Axis1..." and "Axis2..." references should be replaced with an
array to allow for future expansion. Might be difficult owing to different
behaviours of the axes.

Rotary encoder doesn't currently do anything with rotation direction,
so getPositionDegrees() fails to take into account manual back-rotation
of the chuck/spindle

Consider adding support for some form of switch / sensor to prevent
carriage movement outside of specific points (or mandate position
checks at start-up to do this in software only?)

Support display in thousands of an inch as an option - should be simple
to just update in the view (and keep everything metric underneath)
