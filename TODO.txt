Expand use of dialog. For instance the help screen could be
much larger. Will require a resizable (or dynamically expanding)
box for display of information. May want multiple inputs within
such a display box.

Maybe allow zeroing of chuck angle? (use offset in reporting)

Support three axes, to enable X,Y, and a rotary table (or z,
x, and manual rotation of chuck on the lathe)

Adding an extra axis on the mill should allow for usage of the
rotary table in conjunction with axis1 to do thread milling

Make use of the keys on the right (#, Del, Home, PgUp, PgDn, End)?

Remove Alt-Arrows for rapids once controller set up for mill

Lots of refactoring still needed as this grew a bit organically

Implement a proper menu/dialog (see level_designer)

(related to above) Address the "Mode" concept which currently provides
pseudo-modal "dialogs" interleaved into program flow, and is proving
difficult to maintain. If all motors are stopped during a "dialog" then
we can put them all on a separate flow

Touchscreen support (not that I have touch screens yet)

Now that we have support for reading a linear scale on the Z-axis
we need to consider how best to use it. Should position come solely
from that, rather than continuing to rely on "dead reckoning"?
Or should it be used just to make corrections to the expected position?
For the latter maybe we just periodically call setPosition() on axis1's
motor? Or we give the motor a callback function to determine position?

Support limit switches. Could have multiple switches all on one pin and
when triggered it simply issues a 'stop all'. This is partially
implemented (see limitSwitchTriggered())

Support enable pin for each motor

Set initial x-axis retraction direction from config file

Start thinking around a setting for adding a tiny amount of x motion
to counteract a lathe that cuts a bit of a taper (which works brilliantly,
but needs to be a config item that is applied automatically, rather
than having to use taper mode)
    Idea: for determining the angle required for correcting a lathe
    cutting a taper: allow the program to calculate the angle required
    by entering two measurements and a distance

All "Axis1..." and "Axis2..." references should be replaced with an
array to allow for future expansion. Might be difficult owing to different
behaviours of the axes.

Consider adding support for some form of switch / sensor to prevent
carriage movement outside of specific points (or mandate position
checks at start-up to do this in software only?)
  - Display warning if chuck is running in reverse

Support display in thousands of an inch as an option - should be simple
to just update in the view (and keep everything metric underneath)
